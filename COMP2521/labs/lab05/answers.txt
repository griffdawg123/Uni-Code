
NOTE:
- Your time complexities should be expressed in big-O notation and be in
  terms of n, where n is the number of people who  have  been  added  to
  Friendbook.

===============
  FbUnfriend
===============

- Worst case time complexity: O(log(n))

- Explanation: Accessing list elements has O(1) complexity and nameToId 
has complexity O(log(n)) so this function has the same.

===============
FbMutualFriends
===============

- Worst case time complexity: O(n)

- Explanation: Function must loop through all users once. 
List operations ListNew and ListAppend are both O(1)

===============
 FbFriendRecs1
===============

- Worst case time complexity: O(n^3)

- Explanation: Must loop through the whole from max number of mutual FbMutualFriends
within that the function also loops through all users to test their mutual friends

